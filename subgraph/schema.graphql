# User-Centric Schema for Complete Offering Ecosystem

# ============================================
# USER ENTITIES (Main Focus)
# ============================================

type User @entity {
  id: Bytes! # user address
  address: Bytes!
  
  # Investment Activity
  totalInvestments: BigInt!
  totalInvestmentVolume: BigInt! # USD value
  totalTokensReceived: BigInt!
  totalTokensClaimed: BigInt!
  
  # Payout Activity
  totalPayoutsReceived: BigInt!
  totalPayoutsClaimed: BigInt!
  activeWrappedTokens: BigInt!
  
  # Emergency Activity
  totalEmergencyUnlocks: BigInt!
  totalPenaltiesPaid: BigInt!
  
  # Offering Creation (if user is a creator)
  totalOfferingsCreated: BigInt!
  totalFundsRaised: BigInt! # As offering creator
  
  # Timestamps
  firstActivityAt: BigInt!
  lastActivityAt: BigInt!
  
  # Derived relationships
  investments: [UserInvestment!]! @derivedFrom(field: "user")
  claims: [UserClaim!]! @derivedFrom(field: "user")
  payouts: [UserPayout!]! @derivedFrom(field: "user")
  wrappedTokenHoldings: [UserWrappedTokenHolding!]! @derivedFrom(field: "user")
  createdOfferings: [Offering!]! @derivedFrom(field: "creator")
  emergencyUnlocks: [UserEmergencyUnlock!]! @derivedFrom(field: "user")
  refunds: [UserRefund!]! @derivedFrom(field: "user")
  kybValidations: [UserKYBValidation!]! @derivedFrom(field: "user")
}

# ============================================
# USER INVESTMENT TRACKING
# ============================================

type UserInvestment @entity(immutable: true) {
  id: Bytes! # txHash-logIndex
  user: User!
  userAddress: Bytes!
  
  # Investment Details
  offering: Offering!
  offeringAddress: Bytes!
  paymentToken: Bytes!
  paymentTokenSymbol: String
  paidAmount: BigInt!
  usdValue: BigInt!
  tokensReceived: BigInt!
  
  # Investment Type
  isKYBValidated: Boolean!
  isNativeETH: Boolean!
  
  # Wrapped Token Info (if APY enabled)
  hasWrappedTokens: Boolean!
  wrappedTokenAddress: Bytes
  wrappedTokensReceived: BigInt!
  
  # Transaction Info
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  gasUsed: BigInt
  gasPrice: BigInt
}

type UserClaim @entity(immutable: true) {
  id: Bytes! # txHash-logIndex
  user: User!
  userAddress: Bytes!
  
  # Claim Details
  offering: Offering
  offeringAddress: Bytes!
  claimType: String! # "investment_tokens", "wrapped_payout", "final_tokens", "refund"
  amount: BigInt!
  tokenAddress: Bytes!
  tokenSymbol: String
  
  # Context
  isEmergencyUnlock: Boolean!
  penaltyAmount: BigInt!
  
  # Transaction Info
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserPayout @entity(immutable: true) {
  id: Bytes! # txHash-logIndex
  user: User!
  userAddress: Bytes!
  
  # Payout Details
  wrappedToken: WrappedToken!
  wrappedTokenAddress: Bytes!
  payoutDistribution: PayoutDistribution
  payoutPeriod: PayoutPeriod
  amount: BigInt!
  payoutToken: Bytes!
  payoutTokenSymbol: String
  
  # Payout Context
  payoutPeriod: BigInt!
  isPartialClaim: Boolean!
  remainingClaimable: BigInt!
  
  # User's Share Info
  userWrappedBalance: BigInt!
  totalWrappedSupply: BigInt!
  sharePercentage: BigInt! # basis points (10000 = 100%)
  
  # Transaction Info
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}