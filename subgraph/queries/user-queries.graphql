# ============================================
# USER-CENTRIC QUERIES
# ============================================

# Get complete user profile with all activities
query GetUserProfile($userAddress: Bytes!) {
  user(id: $userAddress) {
    id
    address
    totalInvestments
    totalInvestmentVolume
    totalTokensReceived
    totalTokensClaimed
    totalPayoutsReceived
    totalPayoutsClaimed
    activeWrappedTokens
    totalEmergencyUnlocks
    totalPenaltiesPaid
    totalOfferingsCreated
    totalFundsRaised
    firstActivityAt
    lastActivityAt
    
    # Recent investments
    investments(first: 10, orderBy: blockTimestamp, orderDirection: desc) {
      id
      offeringAddress
      paymentToken
      paymentTokenSymbol
      paidAmount
      usdValue
      tokensReceived
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      wrappedTokenAddress
      blockTimestamp
      transactionHash
    }
    
    # Recent claims
    claims(first: 10, orderBy: blockTimestamp, orderDirection: desc) {
      id
      claimType
      amount
      tokenAddress
      tokenSymbol
      isEmergencyUnlock
      penaltyAmount
      blockTimestamp
      transactionHash
    }
    
    # Active wrapped token holdings
    wrappedTokenHoldings(where: { isActive: true }) {
      id
      wrappedTokenAddress
      currentBalance
      originalInvestment
      usdValueInvested
      totalPayoutsReceived
      totalPayoutsClaimed
      currentClaimablePayouts
      lastClaimedPeriod
      firstInvestmentAt
      
      wrappedToken {
        name
        symbol
        maturityDate
        payoutAPR
        emergencyUnlockEnabled
        emergencyUnlockPenalty
      }
    }
    
    # Created offerings
    createdOfferings {
      id
      saleToken
      saleTokenSymbol
      totalRaised
      totalInvestors
      isActive
      isFinalized
      apyEnabled
      createdAt
    }
    
    # Recent notifications
    notifications(first: 5, orderBy: createdAt, orderDirection: desc, where: { isRead: false }) {
      id
      notificationType
      title
      message
      priority
      isActionable
      createdAt
      relatedOffering
      relatedWrappedToken
      relatedAmount
    }
  }
}

# Get user's aggregated investments per offering
query GetUserAggregatedInvestments($userAddress: Bytes!) {
  user(id: $userAddress) {
    aggregatedInvestments(orderBy: totalPaidAmount, orderDirection: desc) {
      id
      offering {
        id
        saleTokenSymbol
        tokenPrice
        apyEnabled
        isActive
        isFinalized
        wrappedTokenAddress
      }
      totalInvestments
      totalPaidAmount
      totalUSDValue
      totalTokensReceived
      totalWrappedTokensReceived
      totalETHInvested
      totalERC20Invested
      totalKYBValidatedInvestments
      hasClaimedTokens
      totalTokensClaimed
      hasReceivedRefund
      totalRefundReceived
      firstInvestmentAt
      lastInvestmentAt
      
      # Individual investments for this offering
      individualInvestments(orderBy: blockTimestamp, orderDirection: desc) {
        id
        paymentToken
        paymentTokenSymbol
        paidAmount
        tokensReceived
        isKYBValidated
        blockTimestamp
        transactionHash
      }
    }
  }
}

# Get user's investment history with detailed breakdown
query GetUserInvestmentHistory($userAddress: Bytes!, $first: Int = 20, $skip: Int = 0) {
  user(id: $userAddress) {
    investments(first: $first, skip: $skip, orderBy: blockTimestamp, orderDirection: desc) {
      id
      offering {
        id
        saleTokenSymbol
        tokenPrice
        apyEnabled
        wrappedTokenAddress
      }
      paymentToken
      paymentTokenSymbol
      paidAmount
      usdValue
      tokensReceived
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      wrappedTokensReceived
      blockTimestamp
      transactionHash
      gasUsed
      gasPrice
    }
  }
}

# Get user's payout history and upcoming payouts
query GetUserPayoutInfo($userAddress: Bytes!) {
  user(id: $userAddress) {
    totalPayoutsReceived
    totalPayoutsClaimed
    
    # Payout history
    payouts(orderBy: blockTimestamp, orderDirection: desc) {
      id
      wrappedToken {
        name
        symbol
        payoutTokenSymbol
      }
      amount
      payoutPeriod
      sharePercentage
      blockTimestamp
      transactionHash
    }
    
    # Active wrapped token holdings with claimable payouts
    wrappedTokenHoldings(where: { isActive: true, currentClaimablePayouts_gt: "0" }) {
      id
      wrappedToken {
        name
        symbol
        payoutTokenSymbol
        currentPayoutPeriod
        maturityDate
      }
      currentBalance
      currentClaimablePayouts
      lastClaimedPeriod
    }
    
    # Upcoming payouts
    upcomingPayouts: wrappedTokenHoldings(where: { isActive: true }) {
      wrappedToken {
        name
        symbol
        firstPayoutDate
        payoutPeriodDuration
        currentPayoutPeriod
        maturityDate
      }
      currentBalance
      usdValueInvested
    }
  }
}

# Get user's emergency unlock history
query GetUserEmergencyUnlocks($userAddress: Bytes!) {
  user(id: $userAddress) {
    totalEmergencyUnlocks
    totalPenaltiesPaid
    
    emergencyUnlocks(orderBy: unlockedAt, orderDirection: desc) {
      id
      wrappedToken {
        name
        symbol
      }
      originalAmount
      penaltyAmount
      receivedAmount
      penaltyPercentage
      totalPayoutsClaimedBefore
      unlockedAt
      transactionHash
    }
  }
}

# Get user's daily activity stats
query GetUserDailyStats($userAddress: Bytes!, $fromDate: String!, $toDate: String!) {
  userDailyStats(
    where: { 
      userAddress: $userAddress, 
      date_gte: $fromDate, 
      date_lte: $toDate 
    },
    orderBy: date,
    orderDirection: desc
  ) {
    id
    date
    investmentsCount
    investmentVolume
    claimsCount
    claimedAmount
    payoutsCount
    payoutAmount
    totalInvestmentVolume
    totalTokensHeld
    totalPayoutsReceived
  }
}

# Get user's monthly activity stats
query GetUserMonthlyStats($userAddress: Bytes!, $year: Int!) {
  userMonthlyStats(
    where: { 
      userAddress: $userAddress, 
      yearMonth_contains: $year 
    },
    orderBy: yearMonth,
    orderDirection: desc
  ) {
    id
    yearMonth
    investmentsCount
    investmentVolume
    claimsCount
    claimedAmount
    payoutsCount
    payoutAmount
    avgInvestmentSize
    avgPayoutSize
  }
}

# ============================================
# OFFERING-CENTRIC QUERIES
# ============================================

# Get offering details with investor information
query GetOfferingDetails($offeringAddress: Bytes!) {
  offering(id: $offeringAddress) {
    id
    creator {
      address
    }
    saleToken
    saleTokenSymbol
    minInvestment
    maxInvestment
    startDate
    endDate
    maturityDate
    fundraisingCap
    # Payout statistics
    totalPayoutDistributions
    totalPayoutVolume
    totalPayoutsClaimed
    currentPayoutPeriod
    nextPayoutTime
    payoutStatus
    
    # Payout distributions for this offering
    payoutDistributions(orderBy: distributedAt, orderDirection: desc) {
      id
      period
      amount
      distributedAt
      eligibleHolders
      claimRate
      status
    }
    
    # Payout periods for this offering
    payoutPeriods(orderBy: periodNumber, orderDirection: desc) {
      id
      periodNumber
      distributedAmount
      totalClaimedAmount
      unclaimedAmount
      claimRate
      status
      distributedAt
    }
    
    # User payouts for this offering
    userPayouts(first: 100, orderBy: blockTimestamp, orderDirection: desc) {
      id
      user {
        address
      }
      amount
      payoutPeriodNumber
      sharePercentage
      blockTimestamp
      transactionHash
    }
    
    # Upcoming payouts for this offering
    upcomingPayouts(where: { isClaimed: false }, orderBy: estimatedPayoutTime) {
      id
      user {
        address
      }
      periodNumber
      estimatedAmount
      sharePercentage
      isClaimable
      estimatedPayoutTime
    }
    
    softCap
    tokenPrice
    totalRaised
    totalInvestors
    totalTokensDistributed
    isActive
    isFinalized
    isCancelled
    softCapReached
    apyEnabled
    wrappedTokenAddress
    payoutRate
    createdAt
    
    # All investment transactions for this offering
    transactions(first: 100, orderBy: blockTimestamp, orderDirection: desc) {
      id
      investor {
        address
      }
      investorAddress
      paymentToken
      paymentTokenSymbol
      investmentAmount
      tokensReceived
      usdValue
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      wrappedTokenAddress
      wrappedTokensReceived
      blockTimestamp
      transactionHash
      gasUsed
      gasPrice
    }
    
    # Performance metrics
    performance: offeringPerformance {
      totalInvestors
      averageInvestmentSize
      largestInvestment
      smallestInvestment
      raisedInFirst24Hours
      raisedInFirstWeek
      timeToSoftCap
      timeToHardCap
      tokensClaimedPercentage
      refundedPercentage
    }
  }
}

# Get offering payout summary
query GetOfferingPayoutSummary($offeringAddress: Bytes!) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    apyEnabled
    payoutStatus
    totalPayoutDistributions
    totalPayoutVolume
    totalPayoutsClaimed
    currentPayoutPeriod
    nextPayoutTime
    
    # Payout statistics
    payoutDistributions {
      period
      amount
      claimRate
      status
      distributedAt
    }
    
    # Active payout periods
    payoutPeriods(where: { status_in: ["active", "distributed"] }) {
      periodNumber
      distributedAmount
      totalClaimedAmount
      unclaimedAmount
      eligibleUsers
    }
  }
}

# Get all payouts for an offering
query GetOfferingPayouts($offeringAddress: Bytes!, $first: Int = 100) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    apyEnabled
    
    userPayouts(
      first: $first,
      orderBy: blockTimestamp,
      orderDirection: desc
    ) {
      id
      user {
        address
      }
      amount
      payoutToken
      payoutTokenSymbol
      payoutPeriodNumber
      sharePercentage
      blockTimestamp
      transactionHash
    }
  }
}

# Get offering payout analytics
query GetOfferingPayoutAnalytics($offeringAddress: Bytes!) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    totalInvestors
    totalPayoutDistributions
    totalPayoutVolume
    totalPayoutsClaimed
    payoutStatus
    
    # Distribution efficiency
    payoutDistributions {
      period
      amount
      eligibleHolders
      averagePayoutPerUser
      claimRate
    }
    
    # Period completion rates
    payoutPeriods {
      periodNumber
      distributedAmount
      totalClaimedAmount
      claimRate
      eligibleUsers
      status
    }
  }
}

# Get all transactions for a specific offering
query GetOfferingTransactions($offeringAddress: Bytes!, $first: Int = 100, $skip: Int = 0) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    totalRaised
    totalInvestors
    totalTokensDistributed
    
    # All investment transactions
    transactions(
      first: $first, 
      skip: $skip, 
      orderBy: blockTimestamp, 
      orderDirection: desc
    ) {
      id
      investor {
        address
      }
      investorAddress
      paymentToken
      paymentTokenSymbol
      investmentAmount
      tokensReceived
      usdValue
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      wrappedTokenAddress
      wrappedTokensReceived
      blockNumber
      blockTimestamp
      transactionHash
      gasUsed
      gasPrice
    }
  }
}

# Get offering transaction summary
query GetOfferingTransactionSummary($offeringAddress: Bytes!) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    totalRaised
    totalInvestors
    totalTokensDistributed
    
    # Transaction breakdown
    transactions {
      id
      investmentAmount
      tokensReceived
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      blockTimestamp
    }
  }
}

# Get investment transactions for a specific offering
query GetOfferingInvestmentTransactions($offeringAddress: Bytes!, $first: Int = 100, $skip: Int = 0) {
  offering(id: $offeringAddress) {
    id
    saleTokenSymbol
    totalRaised
    totalInvestors
    
    investmentTransactions(
      first: $first, 
      skip: $skip, 
      orderBy: blockTimestamp, 
      orderDirection: desc
    ) {
      id
      investor {
        address
      }
      investorAddress
      paymentToken
      paymentTokenSymbol
      investmentAmount
      tokensReceived
      usdValue
      isKYBValidated
      isNativeETH
      hasWrappedTokens
      wrappedTokenAddress
      wrappedTokensReceived
      blockNumber
      blockTimestamp
      transactionHash
      gasUsed
      gasPrice
    }
  }
}

# Get investment transactions by investor
query GetInvestorTransactions($investorAddress: Bytes!, $first: Int = 50) {
  offeringInvestmentTransactions(
    where: { investorAddress: $investorAddress },
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc
  ) {
    id
    offering {
      id
      saleTokenSymbol
      apyEnabled
    }
    investorAddress
    paymentToken
    paymentTokenSymbol
    investmentAmount
    tokensReceived
    usdValue
    isKYBValidated
    isNativeETH
    hasWrappedTokens
    wrappedTokenAddress
    wrappedTokensReceived
    blockNumber
    blockTimestamp
    transactionHash
  }
}

# Get KYB validated transactions
query GetKYBValidatedTransactions($first: Int = 100) {
  offeringInvestmentTransactions(
    where: { isKYBValidated: true },
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc
  ) {
    id
    offering {
      id
      saleTokenSymbol
    }
    investor {
      address
    }
    investmentAmount
    tokensReceived
    usdValue
    paymentTokenSymbol
    blockTimestamp
    transactionHash
  }
}

# Get wrapped token investments
query GetWrappedTokenInvestments($first: Int = 100) {
  offeringInvestmentTransactions(
    where: { hasWrappedTokens: true },
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc
  ) {
    id
    offering {
      id
      saleTokenSymbol
      wrappedTokenAddress
    }
    investor {
      address
    }
    investmentAmount
    tokensReceived
    wrappedTokensReceived
    usdValue
    blockTimestamp
    transactionHash
  }
}

# Get offerings created by a user
query GetUserCreatedOfferings($creatorAddress: Bytes!) {
  user(id: $creatorAddress) {
    totalOfferingsCreated
    totalFundsRaised
    
    createdOfferings(orderBy: createdAt, orderDirection: desc) {
      id
      saleToken
      saleTokenSymbol
      totalRaised
      totalInvestors
      fundraisingCap
      softCap
      isActive
      isFinalized
      softCapReached
      apyEnabled
      createdAt
      
      performance: offeringPerformance {
        averageInvestmentSize
        timeToSoftCap
        tokensClaimedPercentage
      }
    }
  }
}

# ============================================
# WRAPPED TOKEN QUERIES
# ============================================

# Get wrapped token details with holder information
query GetWrappedTokenDetails($wrappedTokenAddress: Bytes!) {
  wrappedToken(id: $wrappedTokenAddress) {
    id
    name
    symbol
    offering {
      id
      creator {
        address
      }
      saleTokenSymbol
    }
    peggedToken
    payoutToken
    payoutTokenSymbol
    maturityDate
    payoutAPR
    payoutPeriodDuration
    firstPayoutDate
    currentPayoutPeriod
    lastPayoutDistributionTime
    nextPayoutTime
    isPayoutPeriodAvailable
    totalSupply
    totalUSDTInvested
    totalPayoutFundsDistributed
    totalPayoutsClaimed
    currentPayoutFunds
    requiredPayoutTokens
    payoutStatus
    emergencyUnlockEnabled
    emergencyUnlockPenalty
    totalHolders
    activeHolders
    createdAt
    
    # Payout periods
    payoutPeriods(orderBy: periodNumber, orderDirection: desc) {
      id
      periodNumber
      startTime
      endTime
      distributedAmount
      totalClaimedAmount
      unclaimedAmount
      claimRate
      status
      distributedAt
    }
    
    # Recent payout distributions
    payoutDistributions(first: 10, orderBy: blockTimestamp, orderDirection: desc) {
      id
      period
      amount
      totalUSDTAtDistribution
      distributedBy
      distributedAt
      eligibleHolders
      averagePayoutPerUser
      claimRate
      status
    }
    
    # Upcoming payouts
    upcomingPayouts(where: { isDistributed: false }, orderBy: estimatedPayoutTime) {
      id
      user {
        address
      }
      periodNumber
      estimatedAmount
      sharePercentage
      isClaimable
      estimatedPayoutTime
    }
    
    # Active holders
    holders(where: { isActive: true }, first: 100) {
      id
      user {
        address
      }
      currentBalance
      originalInvestment
      usdValueInvested
      totalPayoutsClaimed
      currentClaimablePayouts
      lastClaimedPeriod
      firstInvestmentAt
    }
    
    # Emergency unlocks
    emergencyUnlocks(first: 20, orderBy: unlockedAt, orderDirection: desc) {
      id
      user {
        address
      }
      originalAmount
      penaltyAmount
      receivedAmount
      penaltyPercentage
      unlockedAt
    }
  }
}

# Get payout status and upcoming payouts for a wrapped token
query GetWrappedTokenPayoutStatus($wrappedTokenAddress: Bytes!) {
  wrappedToken(id: $wrappedTokenAddress) {
    id
    name
    symbol
    payoutStatus
    currentPayoutPeriod
    nextPayoutTime
    isPayoutPeriodAvailable
    requiredPayoutTokens
    currentPayoutFunds
    totalUSDTInvested
    payoutAPR
    payoutPeriodDuration
    
    # Current period status
    payoutPeriods(
      where: { periodNumber: $currentPeriod },
      first: 1
    ) {
      periodNumber
      distributedAmount
      totalClaimedAmount
      unclaimedAmount
      claimRate
      status
    }
    
    # Upcoming payouts for all users
    upcomingPayouts(
      where: { isDistributed: false },
      orderBy: estimatedPayoutTime
    ) {
      user {
        address
      }
      periodNumber
      estimatedAmount
      sharePercentage
      isClaimable
      estimatedPayoutTime
    }
  }
}

# Get user's upcoming payouts across all wrapped tokens
query GetUserUpcomingPayouts($userAddress: Bytes!) {
  user(id: $userAddress) {
    # Direct upcoming payouts
    upcomingPayouts: userUpcomingPayouts(
      where: { userAddress: $userAddress, isClaimed: false },
      orderBy: estimatedPayoutTime
    ) {
      id
      wrappedToken {
        name
        symbol
        payoutTokenSymbol
        payoutStatus
      }
      periodNumber
      estimatedAmount
      sharePercentage
      isClaimable
      isDistributed
      estimatedPayoutTime
      actualPayoutTime
    }
    
    # Active holdings with potential payouts
    wrappedTokenHoldings(where: { isActive: true }) {
      wrappedToken {
        name
        symbol
        payoutStatus
        nextPayoutTime
        isPayoutPeriodAvailable
        requiredPayoutTokens
        currentPayoutFunds
      }
      currentBalance
      usdValueInvested
      currentClaimablePayouts
    }
  }
}

# Get payout calculations and variance analysis
query GetPayoutCalculations($wrappedTokenAddress: Bytes!) {
  payoutCalculations(
    where: { wrappedTokenAddress: $wrappedTokenAddress },
    orderBy: periodNumber,
    orderDirection: desc
  ) {
    id
    periodNumber
    totalUSDTInvested
    periodAPR
    requiredPayoutTokens
    actualDistributedTokens
    variance
    variancePercentage
    calculatedAt
    distributedAt
  }
}

# Get payout period details with claims
query GetPayoutPeriodDetails($wrappedTokenAddress: Bytes!, $periodNumber: BigInt!) {
  payoutPeriods(
    where: { 
      wrappedTokenAddress: $wrappedTokenAddress,
      periodNumber: $periodNumber 
    }
  ) {
    id
    periodNumber
    startTime
    endTime
    distributedAmount
    totalUSDTAtDistribution
    distributedAt
    distributedBy
    totalClaims
    totalClaimedAmount
    unclaimedAmount
    claimRate
    eligibleUsers
    status
    
    # All claims for this period
    claims: userPayouts(
      where: { payoutPeriodNumber: $periodNumber },
      orderBy: blockTimestamp
    ) {
      user {
        address
      }
      amount
      sharePercentage
      blockTimestamp
      transactionHash
    }
  }
}
# Get user's wrapped token holdings
query GetUserWrappedTokenHoldings($userAddress: Bytes!) {
  user(id: $userAddress) {
    activeWrappedTokens
    
    wrappedTokenHoldings(orderBy: firstInvestmentAt, orderDirection: desc) {
      id
      wrappedToken {
        name
        symbol
        payoutTokenSymbol
        maturityDate
        payoutAPR
        currentPayoutPeriod
        emergencyUnlockEnabled
        emergencyUnlockPenalty
      }
      currentBalance
      originalInvestment
      usdValueInvested
      totalPayoutsReceived
      totalPayoutsClaimed
      currentClaimablePayouts
      lastClaimedPeriod
      isActive
      hasClaimedFinal
      hasEmergencyUnlocked
      firstInvestmentAt
      lastActivityAt
    }
  }
}

# ============================================
# ANALYTICS QUERIES
# ============================================

# Get global system statistics
query GetGlobalStats {
  globalStats(id: "global") {
    totalOfferings
    activeOfferings
    totalOfferingVolume
    totalUsers
    activeInvestors
    totalInvestments
    totalWrappedTokens
    activeWrappedTokens
    totalWrappedTokenHolders
    totalPayoutDistributions
    totalPayoutVolume
    totalPayoutsClaimed
    totalEmergencyUnlocks
    totalPenaltiesPaid
    totalRefunds
    totalRefundVolume
    totalKYBValidations
    kybValidatedInvestments
    lastUpdated
  }
}

# Get daily system activity
query GetDailySystemStats($fromDate: String!, $toDate: String!) {
  dailySystemStats(
    where: { 
      date_gte: $fromDate, 
      date_lte: $toDate 
    },
    orderBy: date,
    orderDirection: desc
  ) {
    id
    date
    newUsers
    newOfferings
    newInvestments
    investmentVolume
    payoutDistributions
    payoutVolume
    payoutClaims
    emergencyUnlocks
    emergencyVolume
    totalUsers
    totalOfferings
    totalInvestmentVolume
  }
}

# Get top performers
query GetTopPerformers($first: Int = 10) {
  # Top investors by volume
  topInvestors: users(
    first: $first, 
    orderBy: totalInvestmentVolume, 
    orderDirection: desc,
    where: { totalInvestmentVolume_gt: "0" }
  ) {
    address
    totalInvestments
    totalInvestmentVolume
    totalPayoutsClaimed
    activeWrappedTokens
    firstActivityAt
  }
  
  # Top offering creators
  topCreators: users(
    first: $first, 
    orderBy: totalFundsRaised, 
    orderDirection: desc,
    where: { totalOfferingsCreated_gt: "0" }
  ) {
    address
    totalOfferingsCreated
    totalFundsRaised
    firstActivityAt
  }
  
  # Most successful offerings
  topOfferings: offerings(
    first: $first, 
    orderBy: totalRaised, 
    orderDirection: desc,
    where: { totalRaised_gt: "0" }
  ) {
    id
    creator {
      address
    }
    saleTokenSymbol
    totalRaised
    totalInvestors
    softCapReached
    isFinalized
    createdAt
  }
}

# ============================================
# PAYOUT TRACKING QUERIES
# ============================================

# Get all claimable payouts for a user
query GetUserClaimablePayouts($userAddress: Bytes!) {
  user(id: $userAddress) {
    wrappedTokenHoldings(where: { isActive: true, currentClaimablePayouts_gt: "0" }) {
      id
      wrappedToken {
        name
        symbol
        payoutTokenSymbol
        currentPayoutPeriod
        payoutAPR
      }
      currentBalance
      currentClaimablePayouts
      lastClaimedPeriod
      
      # Recent payouts for this token
      payouts(first: 5, orderBy: blockTimestamp, orderDirection: desc) {
        amount
        payoutPeriod
        blockTimestamp
      }
    }
  }
}

# Get payout distribution history for a wrapped token
query GetPayoutHistory($wrappedTokenAddress: Bytes!) {
  wrappedToken(id: $wrappedTokenAddress) {
    name
    symbol
    totalPayoutFundsDistributed
    totalPayoutsClaimed
    currentPayoutPeriod
    
    payoutDistributions(orderBy: blockTimestamp, orderDirection: desc) {
      id
      period
      amount
      totalUSDTAtDistribution
      distributedBy
      distributedAt
      eligibleHolders
      totalEligibleBalance
      
      claims(first: 100) {
        user
        amount
        sharePercentage
        claimedAt
      }
    }
  }
}

# ============================================
# NOTIFICATION QUERIES
# ============================================

# Get user notifications
query GetUserNotifications($userAddress: Bytes!, $unreadOnly: Boolean = false) {
  notifications: userNotifications(
    where: { 
      userAddress: $userAddress,
      isRead: $unreadOnly ? false : null
    },
    orderBy: createdAt,
    orderDirection: desc,
    first: 50
  ) {
    id
    notificationType
    title
    message
    priority
    isRead
    isActionable
    createdAt
    readAt
    expiresAt
    relatedOffering
    relatedWrappedToken
    relatedAmount
  }
}

# ============================================
# SEARCH AND FILTER QUERIES
# ============================================

# Search users by activity level
query SearchActiveUsers($minInvestmentVolume: BigInt!, $first: Int = 20) {
  users(
    where: { 
      totalInvestmentVolume_gte: $minInvestmentVolume 
    },
    orderBy: lastActivityAt,
    orderDirection: desc,
    first: $first
  ) {
    address
    totalInvestments
    totalInvestmentVolume
    totalPayoutsClaimed
    activeWrappedTokens
    lastActivityAt
  }
}

# Search offerings by criteria
query SearchOfferings(
  $minRaised: BigInt = "0",
  $apyEnabled: Boolean = null,
  $isActive: Boolean = null,
  $first: Int = 20
) {
  offerings(
    where: {
      totalRaised_gte: $minRaised,
      apyEnabled: $apyEnabled,
      isActive: $isActive
    },
    orderBy: createdAt,
    orderDirection: desc,
    first: $first
  ) {
    id
    creator {
      address
    }
    saleTokenSymbol
    totalRaised
    totalInvestors
    fundraisingCap
    softCap
    softCapReached
    isActive
    isFinalized
    apyEnabled
    createdAt
  }
}

# ============================================
# ACTIVITY FEED QUERIES
# ============================================

# Get recent activity across the platform
query GetRecentActivity($first: Int = 50) {
  # Recent investments
  recentInvestments: investmentEvents(
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc
  ) {
    id
    eventType
    investor
    offering
    amount
    tokensReceived
    isKYBValidated
    blockTimestamp
  }
  
  # Recent payouts
  recentPayouts: payoutEvents(
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc,
    where: { eventType: "claimed" }
  ) {
    id
    wrappedToken
    user
    amount
    period
    sharePercentage
    blockTimestamp
  }
  
  # Recent emergency unlocks
  recentEmergencyUnlocks: emergencyEvents(
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc,
    where: { eventType: "used" }
  ) {
    id
    wrappedToken
    user
    amount
    penalty
    penaltyPercentage
    blockTimestamp
  }
}

# Get user activity feed
query GetUserActivityFeed($userAddress: Bytes!, $first: Int = 20) {
  userActivityHistory(
    where: { userAddress: $userAddress },
    first: $first,
    orderBy: blockTimestamp,
    orderDirection: desc
  ) {
    id
    activityType
    description
    amount
    tokenAddress
    offeringAddress
    wrappedTokenAddress
    blockTimestamp
    transactionHash
  }
}